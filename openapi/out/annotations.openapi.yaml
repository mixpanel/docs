openapi: 3.0.2
info:
  title: Annotations API
  description: >-
    Use annotations to label specific points in time in your charts with a
    description.
  contact:
    url: 'https://mixpanel.com/get-support'
  version: 1.0.0
servers:
  - url: 'https://{regionAndDomain}.com/api/app'
    description: Mixpanel's application API server.
    variables:
      regionAndDomain:
        default: mixpanel
        enum:
          - mixpanel
          - eu.mixpanel
        description: |
          The server location to be used:
            * `mixpanel` - The default (US) servers used for most projects
            * `eu.mixpanel` - EU servers if you are enrolled in EU Data Residency
security:
  - ServiceAccount: []
tags:
  - name: Create Annotation
    description: Create an annotation for a project
  - name: Delete Annotation
    description: Delete annotation for a project
  - name: Retrieve Annotations
    description: List all annotations for the project
  - name: Update Annotation
    description: Change an existing annotations
paths:
  '/projects/{projectId}/annotations':
    parameters:
      - $ref: '#/components/parameters/projectId'
    get:
      operationId: list-all-annotations-for-project
      parameters:
        - $ref: '#/components/parameters/fromDate'
          name: fromDate
          required: false
        - $ref: '#/components/parameters/toDate'
          name: toDate
          required: false
      tags:
        - Retrieve Annotations
      summary: List Annotations
      description: List all annotations in a project.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAnnotationsResponse'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
    post:
      operationId: create-annotation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                date:
                  $ref: '#/components/schemas/InputDate'
                description:
                  $ref: '#/components/schemas/InputDescription'
      tags:
        - Create Annotations
      summary: Create Annotations
      description: Create an Annotation. Requires a role of at least Analyst.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAnnotationsResponse'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
  '/projects/{projectId}/annotations/{annotationId}':
    parameters:
      - $ref: '#/components/parameters/projectId'
      - name: annotationId
        in: path
        description: The id of the annotation
        required: true
        schema:
          type: number
    get:
      operationId: get-annotation
      tags:
        - Retrieve Annotations
      summary: Get Annotation
      description: Get an Annotation
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAnnotationsResponse'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
    patch:
      operationId: patch-annotation
      tags:
        - Patch Annotation
      summary: Patch Annotation
      description: Patch an Annotation. Requires a role of at least Analyst.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                description:
                  $ref: '#/components/schemas/InputDescription'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAnnotationsResponse'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
    delete:
      operationId: delete-annotation
      tags:
        - Delete Annotation
      summary: Delete Annotation
      description: Delete an Annotation. Requires a role of at least Analyst.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAnnotationsResponse'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
components:
  securitySchemes:
    ServiceAccount:
      type: http
      scheme: basic
      description: Service Account
    ProjectSecret:
      type: http
      scheme: basic
      description: Project Secret
  schemas:
    GetAnnotationsResponse:
      title: GetAnnotationsResponse
      description: A JSON response object containing an annotation'
      type: object
      additionalProperties: false
      required:
        - status
        - results
      properties:
        status:
          $ref: '#/components/schemas/ResponseStatus'
        results:
          $ref: '#/components/schemas/AnnotationsEntry'
    DeleteAnnotationsResponse:
      title: DeleteAnnotationsResponse
      description: A JSON response object containing the id of the deleted annotation'
      type: object
      additionalProperties: false
      required:
        - status
        - results
      properties:
        status:
          $ref: '#/components/schemas/ResponseStatus'
        results:
          type: object
          properties:
            id:
              type: number
              description: The id of the deleted annotation
    ListAnnotationsResponse:
      title: ListAnnotationsResponse
      description: A JSON response object containing all annotations in the project'
      type: object
      additionalProperties: false
      required:
        - status
        - results
      properties:
        status:
          $ref: '#/components/schemas/ResponseStatus'
        results:
          type: array
          items:
            $ref: '#/components/schemas/AnnotationsEntry'
    AnnotationsEntry:
      title: AnnotationsEntry
      description: Representation of a single annotation
      type: object
      additionalProperties: false
      properties:
        date:
          $ref: '#/components/schemas/InputDate'
        description:
          $ref: '#/components/schemas/InputDescription'
        id:
          type: number
        user:
          $ref: '#/components/schemas/UserInfo'
    UserInfo:
      title: UserInfo
      description: Info about the creator of the annotation
      type: object
      properties:
        id:
          type: number
        first_name:
          example: John
          type: string
        last_name:
          example: Smith
          type: string
    InputDate:
      type: string
      description: 'A string representation of a date in "YYYY-MM-DD HH:mm:ss" format'
      example: '2022-02-15 12:00:00'
    InputDescription:
      type: string
      description: The text that will be shown when looking at the annotation
      example: Something interesting happened!
    ResponseStatus:
      type: string
      description: The status of the response
      example: ok
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Details about the error that occurred
        status:
          type: string
          enum:
            - error
  parameters:
    projectId:
      in: path
      name: projectId
      schema:
        type: integer
      required: true
      description: 'Your project id (eg: 12345)'
    fromDate:
      in: query
      name: from_date
      schema:
        type: string
      description: >-
        The date in yyyy-mm-dd format to begin querying from. This date is
        inclusive.
      required: true
    toDate:
      in: query
      name: to_date
      schema:
        type: string
      description: The date in yyyy-mm-dd format to query to. This date is inclusive.
      required: true
  responses:
    401Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    403Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
